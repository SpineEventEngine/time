[versions]
animalSniffer = "1.21" # https://www.mojohaus.org/animal-sniffer/animal-sniffer-maven-plugin/
apacheHttp = "4.4.14" # https://hc.apache.org/downloads.cgi
appEngine = "1.9.82" # https://cloud.google.com/java/docs/reference
appEngineGradlePlugin = "2.2.0" # https://cloud.google.com/java/docs/reference
autoCommon = "1.2.1" # https://github.com/google/auto
autoService = "1.0.1" # https://github.com/google/auto
autoValue = "1.9" # https://github.com/google/auto
assertK = "0.25" # https://github.com/willowtreeapps/assertk
bouncyCastle = "1.68" # https://www.bouncycastle.org/java.html
checkerFramework = "3.21.3" # https://checkerframework.org/
commonsCli = "1.5.0" # https://commons.apache.org/proper/commons-cli/
commonsCodec = "1.15" # https://commons.apache.org/proper/commons-codec/changes-report.html
commonsLogging = "1.2" # https://commons.apache.org/proper/commons-logging/
dokka = "1.6.20" # https://github.com/Kotlin/dokka
errorProne = "2.13.1" # https://github.com/google/error-prone
errorProneJavac = "9+181-r4173-1" # https://github.com/tbroyer/gradle-errorprone-plugin/blob/v0.8/build.gradle.kts
errorProneGradlePlugin = "2.0.2" # https://github.com/tbroyer/gradle-errorprone-plugin/releases
findBugs = "3.0.2" # https://github.com/SpineEventEngine/base/issues/108
firebase = "8.1.0" # https://firebase.google.com/docs/admin/setup#java
flogger = "0.7.4" # https://github.com/google/flogger
googleAuthLib = "1.3.0" # https://github.com/googleapis/google-auth-library-java
grpc = "1.45.1" # https://github.com/grpc/grpc-java
guava = "31.1-jre" # https://github.com/google/guava
httpClient = "1.41.5" # https://github.com/googleapis/google-http-java-client
jackson = "2.13.2" # https://github.com/FasterXML
junit = "5.8.2" # https://junit.org/junit5/
junitPlatform = "1.8.2" # https://junit.org/junit5/
kotlin = "1.6.21" # https://github.com/JetBrains/kotlin
licenseReport = "1.16" # https://github.com/jk1/Gradle-License-Report
netty = "4.1.72.Final" # https://github.com/netty/netty/releases
osDetector = "1.7.0" # https://github.com/google/osdetector-gradle-plugin
protobuf = "3.20.1" # https://github.com/protocolbuffers/protobuf
protobufGradlePlugin = "0.8.18" # https://github.com/google/protobuf-gradle-plugin/releases
roaster = "2.24.0.Final" # https://github.com/forge/roaster
slf4j = "1.7.30" # DEPRECATED, use Flogger instead
truth = "1.1.3" # https://github.com/google/truth

[libraries]
animalSniffer = { module = "org.codehaus.mojo:animal-sniffer-annotations", version.ref = "animalSniffer" }
apacheHttp-core = { module = "org.apache.httpcomponents:httpcore", version.ref = "apacheHttp" }
appEngine-sdk = { module = "com.google.appengine:appengine-api-1.0-sdk", version.ref = "appEngine" }
appEngine-gradlePlugin = { module = "com.google.cloud.tools:appengine-gradle-plugin", version.ref = "appEngineGradlePlugin" }
autoCommon = { module = "com.google.auto:auto-common", version.ref = "autoCommon" }
autoService-annotations = { module = "com.google.auto.service:auto-service-annotations", version.ref = "autoService" }
autoService-processor = { module = "com.google.auto.service:auto-service", version.ref = "autoService" }
autoValue-annotations = { module = "com.google.auto.value:auto-value-annotations", version.ref = "autoValue" }
assertK-libJvm = { module = "com.willowtreeapps.assertk:assertk-jvm", version.ref = "assertK" }
bouncyCastle-libPkcsJdk15 = { module = "org.bouncycastle:bcpkix-jdk15on", version.ref = "bouncyCastle" }
checkerFramework-annotations = { module = "org.checkerframework:checker-qual", version.ref = "checkerFramework" }
checkerFramework-dataflow = { module = "org.checkerframework:dataflow", version.ref = "checkerFramework" }
checkerFramework-javacUtil = { module = "org.checkerframework:javacutil", version.ref = "checkerFramework" }
checkerFramework-compatQual = { module = "org.checkerframework:checker-compat-qual", version = "2.5.5" }
commons-cli = { module = "commons-cli:commons-cli", version.ref = "commonsCli" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commonsCodec" }
commons-logging = { module = "commons-logging:commons-logging", version.ref = "commonsLogging" }
dokka-gradlePlugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
dokka-basePlugin = { module = "org.jetbrains.dokka:dokka-base", version.ref = "dokka" }
dokka-kotlinAsJava = { module = "org.jetbrains.dokka:kotlin-as-java-plugin", version.ref = "dokka" }
dokka-spineExtensions = { module = "io.spine.tools:spine-dokka-extensions", version = "2.0.0-SNAPSHOT.3" }
errorProne-annotations = { module = "com.google.errorprone:error_prone_annotations", version.ref = "errorProne" }
errorProne-typeAnnotations = { module = "com.google.errorprone:error_prone_type_annotations", version.ref = "errorProne" }
errorProne-core = { module = "com.google.errorprone:error_prone_core", version.ref = "errorProne" }
errorProne-checkApi = { module = "com.google.errorprone:error_prone_check_api", version.ref = "errorProne" }
errorProne-testHelpers = { module = "com.google.errorprone:error_prone_test_helpers", version.ref = "errorProne" }
errorProne-javacPlugin = { module = "com.google.errorprone:javac", version.ref = "errorProneJavac" }
errorProne-gradlePlugin = { module = "net.ltgt.gradle:gradle-errorprone-plugin", version.ref = "errorProneGradlePlugin" }
findBugs-annotations = { module = "com.google.code.findbugs:jsr305", version.ref = "findBugs" }
firebase-admin = { module = "com.google.firebase:firebase-admin", version.ref = "firebase" }
flogger = { module = "com.google.flogger:flogger", version.ref = "flogger" }
flogger-runtime-systemBackend = { module = "com.google.flogger:flogger-system-backend", version.ref = "flogger" }
flogger-runtime-log4J = { module = "com.google.flogger:flogger-log4j", version.ref = "flogger" }
flogger-runtime-slf4J = { module = "com.google.flogger:slf4j-backend-factory", version.ref = "flogger" }
# https://github.com/googleapis/google-api-java-client
google-apis-client = "com.google.api-client:google-api-client:1.32.2"
# https://github.com/googleapis/api-common-java
google-apis-common = "com.google.api:api-common:2.1.1"
# https://github.com/googleapis/java-common-protos
google-apis-commonProtos = "com.google.api.grpc:proto-google-common-protos:2.7.0"
# https://github.com/googleapis/gax-java
google-apis-gax = "com.google.api:gax:2.7.1"
# https://github.com/googleapis/java-iam
google-apis-protoAim = "com.google.api.grpc:proto-google-iam-v1:1.2.0"
# https://github.com/googleapis/google-oauth-java-client
google-apis-oAuthClient = "com.google.oauth-client:google-oauth-client:1.32.1"
# https://github.com/googleapis/google-auth-library-java
google-apis-auth-credentials = { module = "com.google.auth:google-auth-library-credentials", version.ref = "googleAuthLib" }
#https://github.com/googleapis/google-auth-library-java
google-apis-auth-oAuth2Http = { module = "com.google.auth:google-auth-library-oauth2-http", version.ref = "googleAuthLib" }
# https://github.com/googleapis/java-core
google-cloud-core = "com.google.cloud:google-cloud-core:2.3.3"
# https://github.com/googleapis/java-pubsub/tree/main/proto-google-cloud-pubsub-v1
google-cloud-pubSubGrpcApi = "com.google.api.grpc:proto-google-cloud-pubsub-v1:1.97.0"
# https://github.com/googleapis/java-trace
google-cloud-trace = "com.google.cloud:google-cloud-trace:2.1.0"
# https://github.com/googleapis/java-datastore
google-cloud-datastore = "com.google.cloud:google-cloud-datastore:2.2.1"
# https://mvnrepository.com/artifact/com.google.cloud.artifactregistry/artifactregistry-auth-common
google-artifactRegistry-authCommon = "com.google.cloud.artifactregistry:artifactregistry-auth-common:2.1.2"
grpc-api = { module = "io.grpc:grpc-api", version.ref = "grpc" }
grpc-auth = { module = "io.grpc:grpc-auth", version.ref = "grpc" }
grpc-core = { module = "io.grpc:grpc-core", version.ref = "grpc" }
grpc-context = { module = "io.grpc:grpc-context", version.ref = "grpc" }
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc" }
grpc-okHttp = { module = "io.grpc:grpc-okhttp", version.ref = "grpc" }
grpc-protobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpc" }
grpc-protobufLite = { module = "io.grpc:grpc-protobuf-lite", version.ref = "grpc" }
grpc-protobufPlugin = { module = "io.grpc:protoc-gen-grpc-java", version.ref = "grpc" }
grpc-netty = { module = "io.grpc:grpc-netty", version.ref = "grpc" }
grpc-nettyShaded = { module = "io.grpc:grpc-netty-shaded", version.ref = "grpc" }
# https://github.com/google/gson
gson = "com.google.code.gson:gson:2.9.0"
guava = { module = "com.google.guava:guava", version.ref = "guava" }
guava-testLib = { module = "com.google.guava:guava-testlib", version.ref = "guava" }
# https://github.com/ajoberstar/grgit
grgit = "org.ajoberstar.grgit:grgit-core:3.1.1"
httpClient-googe = { module = "com.google.http-client:google-http-client", version.ref = "httpClient" }
httpClient-jackson2 = { module = "com.google.http-client:google-http-client-jackson2", version.ref = "httpClient" }
httpClient-gson = { module = "com.google.http-client:google-http-client-gson", version.ref = "httpClient" }
httpClient-apache2 = { module = "com.google.http-client:google-http-client-apache-v2", version.ref = "httpClient" }
httpClient-apache = "com.google.http-client:google-http-client-apache:2.1.2"
# https://github.com/google/j2objc/releases
j2objc-annotations = "com.google.j2objc:j2objc-annotations:1.3"
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-dataformatXml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-xml", version.ref = "jackson" }
jackson-dataformatYaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }
jackson-moduleKotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
# https://github.com/FasterXML/jackson-databind
jackson-databind = "com.fasterxml.jackson.core:jackson-databind:2.13.2.2"
# https://github.com/auth0/java-jwt
javaJwt = "com.auth0:java-jwt:3.19.1"
# https://github.com/square/javapoet
javaPoet = "com.squareup:javapoet:1.13.0"
# https://github.com/eclipse-ee4j/common-annotations-api
javaX-annotations = "javax.annotation:javax.annotation-api:1.3.2"
javaX-servletApi = "javax.servlet:javax.servlet-api:3.1.0"
junit-legacy = "junit:junit:4.13.1"
# https://github.com/apiguardian-team/apiguardian
junit-apiGuardian-api = "org.apiguardian:apiguardian-api:1.1.2"
junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
junit-runner = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junitPlatform" }
junit-platform-commons = { module = "org.junit.platform:junit-platform-commons", version.ref = "junitPlatform" }
# https://github.com/junit-pioneer/junit-pioneer
junit-pioneer = "org.junit-pioneer:junit-pioneer:1.5.0"
# https://github.com/cbeust/klaxon
klaxon = "com.beust:klaxon:5.6"
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-stdLib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-stdLib-common = { module = "org.jetbrains.kotlin:kotlin-stdlib-common", version.ref = "kotlin" }
kotlin-stdLib-jdk7 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk7", version.ref = "kotlin" }
kotlin-stdLib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
# https://github.com/z4kn4fein/kotlin-semver
kotlinSemver = "io.github.z4kn4fein:semver:1.2.1"
licenseReport = { module = "com.github.jk1:gradle-license-report", version.ref = "licenseReport" }
netty-common = { module = "io.netty:netty-common", version.ref = "netty" }
netty-buffer = { module = "io.netty:netty-buffer", version.ref = "netty" }
netty-transport = { module = "io.netty:netty-transport", version.ref = "netty" }
netty-handler = { module = "io.netty:netty-handler", version.ref = "netty" }
netty-codecHttp = { module = "io.netty:netty-codec-http", version.ref = "netty" }
okio = "com.squareup.okio:okio:1.17.5"
osDetector-gradlePlugin = { module = "com.google.gradle:osdetector-gradle-plugin", version.ref = "osDetector" }
# https://codehaus-plexus.github.io/plexus-utils/
plexus = "org.codehaus.plexus:plexus-utils:3.4.0"
protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf" }
protobuf-java-util = { module = "com.google.protobuf:protobuf-java-util", version.ref = "protobuf" }
protobuf-kotlin = { module = "com.google.protobuf:protobuf-kotlin", version.ref = "protobuf" }
protobuf-compiler = { module = "com.google.protobuf:protoc", version.ref = "protobuf" }
protobuf-gradlePlugin = { module = "com.google.protobuf:protobuf-gradle-plugin", version.ref = "protobufGradlePlugin" }
roaster-api = { module = "org.jboss.forge.roaster:roaster-api", version.ref = "roaster" }
roaster-jdt = { module = "org.jboss.forge.roaster:roaster-jdt", version.ref = "roaster" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-jdk14 = { module = "org.slf4j:slf4j-jdk14", version.ref = "slf4j" }
testKitTruth = "com.autonomousapps:testkit-truth:1.1"
truth = { module = "com.google.truth:truth", version.ref = "truth" }
truth-java8 = { module = "com.google.truth.extensions:truth-java8-extension", version.ref = "truth" }
truth-proto = { module = "com.google.truth.extensions:truth-proto-extension", version.ref = "truth" }

[bundles]
checkerFramework-dataflow = ["checkerFramework-dataflow", "checkerFramework-javacUtil"]
errorProne-annotations = ["errorProne-annotations", "errorProne-typeAnnotations"]
junit-api = ["junit-apiGuardian-api", "junit-api", "junit-params"]
protobuf-libs = ["protobuf-java", "protobuf-java-util", "protobuf-kotlin"]
truth = ["truth", "truth-java8", "truth-proto"]

[plugins]
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
errorProne = { id = "net.ltgt.errorprone", version.ref = "errorProneGradlePlugin" }
licenseReport = { id = "com.github.jk1.dependency-license-report", version.ref = "licenseReport" }
osDetector = { id = "com.google.osdetector", version.ref = "osDetector" }
protobuf = { id = "com.google.protobuf", version.ref = "protobufGradlePlugin" }
